# Generated by Django 5.2.4 on 2025-07-13 08:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0014_add_performance_indexes"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BlacklistedToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jti",
                    models.CharField(
                        help_text="JWT ID (jti) claim from the token",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "token_type",
                    models.CharField(
                        choices=[
                            ("access", "Access Token"),
                            ("refresh", "Refresh Token"),
                        ],
                        help_text="Type of token that was blacklisted",
                        max_length=20,
                    ),
                ),
                (
                    "blacklisted_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the token was blacklisted"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When the original token expires"),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True,
                        help_text="Reason for blacklisting (logout, security, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address that initiated the blacklisting",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blacklisted Token",
                "verbose_name_plural": "Blacklisted Tokens",
                "db_table": "blacklisted_tokens",
                "ordering": ["-blacklisted_at"],
            },
        ),
        migrations.CreateModel(
            name="SMSOTPCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Phone number in E.164 format",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be in E.164 format (e.g., +1234567890)",
                                regex="^\\+[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                (
                    "otp_code",
                    models.CharField(
                        help_text="6-digit OTP code",
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="OTP code must be exactly 6 digits",
                                regex="^\\d{6}$",
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When this OTP code expires"),
                ),
                (
                    "is_used",
                    models.BooleanField(
                        default=False, help_text="Whether this code has been used"
                    ),
                ),
                (
                    "attempts",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of verification attempts"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address that requested the OTP",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS OTP Code",
                "verbose_name_plural": "SMS OTP Codes",
                "db_table": "sms_otp_codes",
            },
        ),
        migrations.CreateModel(
            name="SMSRateLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be in E.164 format",
                                regex="^\\+[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                ("last_sms_sent", models.DateTimeField(auto_now_add=True)),
                ("sms_count_today", models.PositiveIntegerField(default=1)),
                ("sms_count_hour", models.PositiveIntegerField(default=1)),
                ("daily_reset_at", models.DateTimeField()),
                ("hourly_reset_at", models.DateTimeField()),
            ],
            options={
                "verbose_name": "SMS Rate Limit",
                "verbose_name_plural": "SMS Rate Limits",
                "db_table": "sms_rate_limits",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="firebase_uid",
            field=models.CharField(
                blank=True,
                help_text="Firebase user identifier for authentication",
                max_length=128,
                null=True,
                unique=True,
                verbose_name="Firebase UID",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="social_avatar_url",
            field=models.URLField(
                blank=True,
                help_text="Profile picture URL from social providers",
                verbose_name="social avatar URL",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["firebase_uid"], name="users_firebas_361636_idx"
            ),
        ),
        migrations.AddField(
            model_name="blacklistedtoken",
            name="user",
            field=models.ForeignKey(
                help_text="User who owns this token",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="smsotpcode",
            index=models.Index(
                fields=["phone_number", "created_at"],
                name="sms_otp_cod_phone_n_ec2d47_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="smsotpcode",
            index=models.Index(
                fields=["otp_code"], name="sms_otp_cod_otp_cod_24f8dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="smsotpcode",
            index=models.Index(
                fields=["expires_at"], name="sms_otp_cod_expires_80b5d0_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="smsotpcode",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_used", False)),
                fields=("phone_number",),
                name="unique_active_otp_per_phone",
            ),
        ),
        migrations.AddIndex(
            model_name="smsratelimit",
            index=models.Index(
                fields=["phone_number"], name="sms_rate_li_phone_n_cd96d0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="smsratelimit",
            index=models.Index(
                fields=["last_sms_sent"], name="sms_rate_li_last_sm_25471a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="blacklistedtoken",
            index=models.Index(fields=["jti"], name="blacklisted_jti_10baef_idx"),
        ),
        migrations.AddIndex(
            model_name="blacklistedtoken",
            index=models.Index(
                fields=["user", "blacklisted_at"], name="blacklisted_user_id_6f7037_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="blacklistedtoken",
            index=models.Index(
                fields=["expires_at"], name="blacklisted_expires_d1bb66_idx"
            ),
        ),
    ]
